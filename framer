#!/bin/sh

# = framer =====================================================================
#
# Version 0.1 (2019.10.18)
# Create standarized posts for Instagram
#
# by Carlos Vigil Vásquez
# https://github.com/cvigilv/
# ==============================================================================

# SCRIPT HISTORY
_version_="0.1"
_released_="Currently in development"
_title_="IGpost - Standarized Instagram posts $_version_"

# ARGUMENT PARSING
 helper()
{
echo
"
Usage: IGpost [arguments]

Arguments:
    -h or --help        Print Help (this message) and exit
    --version           Print version information and exit
    -f or --file        Image file path";
exit 1;
}

ver()
{
echo
"
Version:        $_version_
Release:        $_released_";
exit 1;
}

echo "$_title_"

if [[ -z $1 ]]; then
    echo -e "\nUsage:\t\t$0 [ --help ] [ --version ]\nMore info with:\t$0 --help"
    exit 1
fi

while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        -h|--help) helper;;                          # Show help message
        -v|--version) ver;;                          # Show version message
        -f|--file) IMAGE="$2"; shift; shift;;        # Get folder path
        *)  echo "Unknown argument \'$1\'"; exit 0;; # Exit on unknown argument
    esac
done

RESIZED_IMAGE="/tmp/resized_$(basename ${IMAGE})"
CANVAS="/tmp/canvas.jpg"
CAPTION="/tmp/caption.txt"
POST="$(echo ${IMAGE} | sed --expression='s/.jpg/-IG.jpg/g')"

COLOURED=$(convert ${IMAGE} \
    -colorspace HSL -channel g -separate +channel -format "%[fx:mean]" info:)

rm /tmp/backgrounds.sh
rm /tmp/backgrounds.png
rm /tmp/caption.txt

if [ "$COLOURED" != "0" ]; then
    COLOUR_OPTIONS=$(convert ${IMAGE} -scale 32x32! -depth 8 +dither -colors 8 \
        -format "%c" histogram:info: | sort -r -n -k 1 -t " " | \
        awk '{print $NF}' | sed 's/s/xc:"/' | sed 's/$/"/')
    eval "convert -size 128x128 label:'${IMAGE}:' ${COLOUR_OPTIONS//$'\n'/ } +append /tmp/backgrounds.png" && feh /tmp/backgrounds.png &
    echo 'Which colour will the background have? (1 through 8)'
    read PICKED

    BORDER_COLOUR='white'
    CANVAS_COLOUR=$(echo ${COLOUR_OPTIONS//$'\n'/ } | cut -d" " -f${PICKED} | sed 's/xc://')
else
    BORDER_COLOUR='black'
    CANVAS_COLOUR='white'
fi

eval "convert -size 2000x2000 xc:${CANVAS_COLOUR//,/, } ${CANVAS}"
convert ${IMAGE} -resize 1850x1850\> -bordercolor $BORDER_COLOUR -border 20 ${RESIZED_IMAGE}
composite -gravity center ${RESIZED_IMAGE} ${CANVAS} ${POST}

touch ${CAPTION}
echo -e "\n·\n·\n·\n·\n#<++> #<++> #<++> #<++> #filmphotography #backtothebase #35mm" >> ${CAPTION}
nvim ${CAPTION}
mogrify -set comment "$(cat ${CAPTION})" ${POST}
